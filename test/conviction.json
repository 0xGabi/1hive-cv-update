[
  "function supportsInterface(bytes4 _interfaceId) pure returns (bool)",
  "function stableTokenOracle() view returns (address)",
  "function hasInitialized() view returns (bool)",
  "function proposalCounter() view returns (uint256)",
  "function executeProposal(uint256 _proposalId)",
  "function D() view returns (uint256)",
  "function ABSTAIN_PROPOSAL_ID() view returns (uint256)",
  "function stakeAllToProposal(uint256 _proposalId)",
  "function setAgreement(address _agreement)",
  "function getEVMScriptExecutor(bytes _script) view returns (address)",
  "function getRecoveryVault() view returns (address)",
  "function MAX_STAKED_PROPOSALS() view returns (uint64)",
  "function setStableTokenOracleSettings(address _stableTokenOracle, address _stableToken)",
  "function onTransfer(address _from, address _to, uint256 _amount) returns (bool)",
  "function onRegisterAsHook(uint256 _hookId, address _token)",
  "function requestToken() view returns (address)",
  "function addProposal(string _title, bytes _link, uint256 _requestedAmount, bool _stableRequestAmount, address _beneficiary)",
  "function UPDATE_SETTINGS_ROLE() view returns (bytes32)",
  "function withdrawAllFromProposal(uint256 _proposalId)",
  "function stakeToken() view returns (address)",
  "function decay() view returns (uint256)",
  "function calculateThreshold(uint256 _requestedAmount) view returns (uint256 _threshold)",
  "function initialize(address _stakeToken, address _requestToken, address _stableToken, address _stableTokenOracle, address _vault, uint256 _decay, uint256 _maxRatio, uint256 _weight, uint256 _minThresholdStakePercentage)",
  "function withdrawFromProposal(uint256 _proposalId, uint256 _amount)",
  "function canChallenge(uint256 _proposalId) view returns (bool)",
  "function getVoterStakedProposals(address _voter) view returns (uint256[])",
  "function maxRatio() view returns (uint256)",
  "function canClose(uint256 _proposalId) view returns (bool)",
  "function onDisputableActionAllowed(uint256 _disputableActionId)",
  "function allowRecoverability(address token) view returns (bool)",
  "function onDisputableActionChallenged(uint256 _disputableActionId, uint256 _challengeId, address _challenger)",
  "function appId() view returns (bytes32)",
  "function totalStaked() view returns (uint256)",
  "function contractPaused() view returns (bool)",
  "function getInitializationBlock() view returns (uint256)",
  "function CHALLENGE_ROLE() view returns (bytes32)",
  "function transferToVault(address _token)",
  "function withdrawFromInactiveProposals()",
  "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
  "function weight() view returns (uint256)",
  "function getEVMScriptRegistry() view returns (address)",
  "function stableToken() view returns (address)",
  "function getTokenManager() returns (address)",
  "function onDisputableActionVoided(uint256 _disputableActionId)",
  "function getAgreement() view returns (address)",
  "function onRevokeAsHook(uint256 _hookId, address _token)",
  "function setConvictionCalculationSettings(uint256 _decay, uint256 _maxRatio, uint256 _weight, uint256 _minThresholdStakePercentage)",
  "function getProposal(uint256 _proposalId) view returns (uint256 requestedAmount, bool stableRequestAmount, address beneficiary, uint256 stakedTokens, uint256 convictionLast, uint64 blockLast, uint256 agreementActionId, uint8 proposalStatus, address submitter, uint256 threshold)",
  "function addSignalingProposal(string _title, bytes _link)",
  "function SET_AGREEMENT_ROLE() view returns (bytes32)",
  "function kernel() view returns (address)",
  "function onApprove(address _holder, address _spender, uint256 _amount) returns (bool)",
  "function calculateConviction(uint64 _timePassed, uint256 _lastConv, uint256 _oldAmount) view returns (uint256)",
  "function minThresholdStakePercentage() view returns (uint256)",
  "function PAUSE_CONTRACT_ROLE() view returns (bytes32)",
  "function ONE_HUNDRED_PERCENT() view returns (uint256)",
  "function getTotalVoterStake(address _voter) view returns (uint256)",
  "function isPetrified() view returns (bool)",
  "function cancelProposal(uint256 _proposalId)",
  "function getProposalVoterStake(uint256 _proposalId, address _voter) view returns (uint256)",
  "function pauseContract(bool _pauseEnabled)",
  "function CREATE_PROPOSALS_ROLE() view returns (bytes32)",
  "function CANCEL_PROPOSALS_ROLE() view returns (bytes32)",
  "function onDisputableActionRejected(uint256 _disputableActionId)",
  "function vault() view returns (address)",
  "function stakeToProposal(uint256 _proposalId, uint256 _amount)",
  "event ContractPaused(bool pauseEnabled)",
  "event OracleSettingsChanged(address stableTokenOracle, address stableToken)",
  "event ConvictionSettingsChanged(uint256 decay, uint256 maxRatio, uint256 weight, uint256 minThresholdStakePercentage)",
  "event ProposalAdded(address indexed entity, uint256 indexed id, uint256 indexed actionId, string title, bytes link, uint256 amount, bool stable, address beneficiary)",
  "event StakeAdded(address indexed entity, uint256 indexed id, uint256 amount, uint256 tokensStaked, uint256 totalTokensStaked, uint256 conviction)",
  "event StakeWithdrawn(address entity, uint256 indexed id, uint256 amount, uint256 tokensStaked, uint256 totalTokensStaked, uint256 conviction)",
  "event ProposalExecuted(uint256 indexed id, uint256 conviction)",
  "event ProposalPaused(uint256 indexed proposalId, uint256 indexed challengeId)",
  "event ProposalResumed(uint256 indexed proposalId)",
  "event ProposalCancelled(uint256 indexed proposalId)",
  "event ProposalRejected(uint256 indexed proposalId)",
  "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
  "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
  "event AgreementSet(address indexed agreement)"
]
